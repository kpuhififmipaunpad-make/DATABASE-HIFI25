<!-- Font Awesome -->
<script src="https://kit.fontawesome.com/7cc967098c.js" crossorigin="anonymous"></script>

<!-- jQuery / Bootstrap / AdminLTE -->
<script src="/adminlte/plugins/jquery/jquery.min.js"></script>
<script src="/adminlte/plugins/jquery-ui/jquery-ui.min.js"></script>
<script> $.widget.bridge('uibutton', $.ui.button) </script>
<script src="/adminlte/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
<script src="/adminlte/dist/js/adminlte.js"></script>

<!-- DataTables + Buttons -->
<script src="/adminlte/plugins/datatables/jquery.dataTables.min.js"></script>
<script src="/adminlte/plugins/datatables-bs4/js/dataTables.bootstrap4.min.js"></script>
<script src="/adminlte/plugins/datatables-responsive/js/dataTables.responsive.min.js"></script>
<script src="/adminlte/plugins/datatables-responsive/js/responsive.bootstrap4.min.js"></script>
<script src="/adminlte/plugins/datatables-buttons/js/dataTables.buttons.min.js"></script>
<script src="/adminlte/plugins/datatables-buttons/js/buttons.bootstrap4.min.js"></script>
<script src="/adminlte/plugins/jszip/jszip.min.js"></script>
<script src="/adminlte/plugins/pdfmake/pdfmake.min.js"></script>
<script src="/adminlte/plugins/pdfmake/vfs_fonts.js"></script>
<script src="/adminlte/plugins/datatables-buttons/js/buttons.html5.min.js"></script>
<script src="/adminlte/plugins/datatables-buttons/js/buttons.print.min.js"></script>
<script src="/adminlte/plugins/datatables-buttons/js/buttons.colVis.min.js"></script>

<script>
  // Namespace umum
  window.HIFIAdmin = {
    refreshData: () => window.location.reload()
  };

  // Animasi angka untuk stat (aman kalau elemen tidak ada)
  document.addEventListener('DOMContentLoaded', () => {
    document.querySelectorAll('[data-counter]').forEach(el => {
      const target = Number(el.getAttribute('data-counter') || 0);
      let cur = 0;
      const step = Math.max(1, Math.round(target / 50));
      const tick = () => {
        cur = Math.min(target, cur + step);
        el.textContent = cur.toLocaleString('id-ID');
        if (cur < target) requestAnimationFrame(tick);
      };
      tick();
    });
  });

  // Inisialisasi DataTable (DASHBOARD)
  $(function(){
    const $tbl = $('#usersTable');
    if (!$tbl.length) return;

    const table = $tbl.DataTable({
      responsive: true,
      autoWidth: false,

      // HIDE default search & buttons; kita taruh manual di toolbar
      dom: 't<"dt-bottom"ip>',
      searching: true,        // tetap aktif untuk API, tapi UI default tidak ditampilkan
      lengthChange: false,
      pageLength: 10,
      lengthMenu: [[10,20,30,50,100,-1],[10,20,30,50,100,'All']],
      pagingType: 'full_numbers',
      columnDefs: [
        { targets: 'no-export', orderable: false, searchable: false }
      ],
      order: [[1, 'asc']],
      language: {
        paginate: { previous: 'Sebelumnya', next: 'Selanjutnya' },
        info: 'Menampilkan _START_ sampai _END_ dari _TOTAL_ data',
        infoEmpty: 'Tidak ada data',
        zeroRecords: 'Data tidak ditemukan'
      }
    });

    // ===== Export buttons (Excel, PDF, Print) di toolbar custom =====
    const btns = new $.fn.dataTable.Buttons(table, {
      buttons: [
        { extend: 'excelHtml5', text: '<i class="fas fa-file-excel"></i> Export Excel', className: 'dt-btn-green' },
        { extend: 'pdfHtml5',   text: '<i class="fas fa-file-pdf"></i> Export PDF',   className: 'dt-btn-green', orientation: 'landscape', pageSize: 'A4' },
        { extend: 'print',      text: '<i class="fas fa-print"></i> Print',           className: 'dt-btn-green' }
      ]
    });
    table.buttons().container().appendTo($('.table-toolbar')[0]);

    // ===== Search khusus kolom "Nama" (kolom index 2) =====
    $('#searchNama').on('input', function(){
      table.column(2).search(this.value).draw();
    });

    // ===== Items per page =====
    $('#itemsPerPage').on('change', function(){
      table.page.len(parseInt(this.value, 10) || 10).draw();
    });

    // ===== Row detail (klik baris) =====
    $('#usersTable tbody').on('click', 'tr', function(e){
      if ($(e.target).closest('.btn-action, button, a, i').length) return; // abaikan klik tombol

      const tr  = $(this);
      const row = table.row(tr);

      if (row.child.isShown()) {
        row.child.hide();
        tr.removeClass('shown');
        return;
      }

      const tds = tr.children('td');
      const data = {
        no: tds.eq(0).text().trim(),
        username: tds.eq(1).text().trim(),
        nama: tds.eq(2).text().trim(),
        npm: tds.eq(3).text().trim(),
        email: tds.eq(4).text().trim(),
        telp: tds.eq(5).text().trim(),
        roleText: tds.eq(6).text().trim(),
        update: tds.eq(7).text().trim(),
        id: tr.data('id')
      };

      const badgeClass = data.roleText.toLowerCase() === 'admin' ? 'badge-red' : 'badge-blue';
      const detailHTML = `
        <div class="dt-detail">
          <div class="detail-card">
            <div class="detail-item"><b>Username</b><span>${data.username || '-'}</span></div>
            <div class="detail-item"><b>Nama</b><span>${data.nama || '-'}</span></div>
            <div class="detail-item"><b>NPM</b><span>${data.npm || '-'}</span></div>
            <div class="detail-item"><b>Email</b><span>${data.email || '-'}</span></div>
            <div class="detail-item"><b>Telepon</b><span>${data.telp || '-'}</span></div>
            <div class="detail-item"><b>Role</b>
              <span class="badge-glass ${badgeClass}">${data.roleText || '-'}</span>
            </div>
            <div class="detail-item"><b>Update</b><span>${data.update || '-'}</span></div>
            <div class="detail-actions">
              <a class="btn-primary-gradient" href="/dashboard/edit/${data.id}" title="Edit data">
                <i class="fas fa-edit"></i> Edit Data
              </a>
            </div>
          </div>
        </div>
      `;
      row.child(detailHTML).show();
      tr.addClass('shown');
    });
  });
</script>
